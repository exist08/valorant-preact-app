{"version":3,"sources":["webpack:///./routes/agent/index.js","webpack:///../src/index.js"],"names":["Agent","uuid","useState","data","setData","role","setRole","ability","setAbility","abilityDesx","setAbilityDesx","getData","res","fetch","respdata","json","abilities","description","useEffect","displayName","bustPortrait","className","style","backgroundImage","onClick","displayIcon","map","ablt","idx","slot","slotClick","getHookState","index","type","options","currentComponent","currentHook","hooks","length","push","initialState","reducer","init","hookState","currentIndex","_reducer","invokeOrReturn","nextValue","action","setState","useReducer","callback","args","state","argsChanged","flushAfterPaintEffects","afterPaintEffects","forEach","component","invokeCleanup","invokeEffect","e","hook","comp","oldArgs","newArgs","some","arg","f","prevRaf","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","c","requestAnimationFrame","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","commitQueue","filter","cb"],"mappings":"ysCA8EeA,UA1ED,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACf,IAAwBC,YAAS,IAAjC,GAAOC,EAAP,KAAaC,EAAb,KACA,IAAwBF,YAAS,IAAjC,GAAOG,EAAP,KAAaC,EAAb,KACA,IAA8BJ,YAAS,IAAvC,GAAOK,EAAP,KAAgBC,EAAhB,KACA,IAAsCN,YAAS,IAA/C,GAAOO,EAAP,KAAoBC,EAApB,KAEMC,EAAO,e,EAAA,G,EAAG,YACd,IAAMC,QAAYC,MAAM,sCAAD,OAAuCZ,IACxDa,QAAiBF,EAAIG,OAC3BX,EAAQU,EAASX,MACjBG,EAAQQ,EAASX,KAAKE,MACtBG,EAAWM,EAASX,KAAKa,WACzBN,EAAeI,EAASX,KAAKc,c,+KANlB,qDASbC,aAAU,WACRP,MACC,IAEH,IAOQQ,EAA8BhB,EAA9BgB,YAAaC,EAAiBjB,EAAjBiB,aAErB,OACE,oBAAMC,UAAU,SACd,mBACEA,UAAU,SACVC,MAAO,CAAEC,gBAAiB,OAAF,OAASH,EAAT,QAE1B,mBAAKC,UAAU,cACb,mBAAKA,UAAU,wBACb,oBAAMA,UAAU,cAAchB,EAAKc,aACnC,kBAAIE,UAAU,QAAQF,GACtB,mBAAKE,UAAU,aACb,mBAAKA,UAAU,aAAaG,QAAS,WAnB7Cd,EAAeP,EAAKc,eAoBV,mBAAKI,UAAU,cAAf,QACA,mBACEA,UAAU,UACVC,MAAO,CAAEC,gBAAiB,OAAF,OAASlB,EAAKoB,YAAd,SAG3BlB,EAAQmB,KAAI,SAACC,EAAMC,GAClB,IAAQC,EAAgDF,EAAhDE,KAAmBJ,EAA6BE,EAA7BF,YAC3B,OACE,mBACEJ,UAAS,kBAAaO,GACtBJ,QAAS,kBA7BP,SAACI,GACjBlB,EAAeH,EAAQqB,GAAKX,aA4BCa,CAAUF,KAEzB,mBAAKP,UAAU,cAAcQ,GAC7B,mBACER,UAAU,UACVC,MAAO,CAAEC,gBAAiB,OAAF,OAASE,EAAT,aAOlC,iBAAGJ,UAAU,QAAQZ,GACrB,iBAAGY,UAAU,aACX,oBAAMA,UAAU,QAAQhB,EAAKc,aAC5Bd,EAAKY,kB,kCCoBlB,SAASc,EAAaC,EAAOC,GACxBC,eACHA,cAAcC,EAAkBH,EAAOI,GAAeH,GAEvDG,EAAc,MAORC,EACLF,QACCA,MAA2B,IACpB,OACU,YAGfH,GAASK,KAAYC,QACxBD,KAAYE,KAAK,IAEXF,KAAYL,GAMb,SAAS9B,EAASsC,UACxBJ,EAAc,EAUf,SAA2BK,EAASD,EAAcE,OAE3CC,EAAYZ,EAAaa,IAAgB,UAC/CD,EAAUE,EAAWJ,EAChBE,QACJA,KAAmB,CACjBD,EAAiDA,EAAKF,GAA/CM,SAA0BN,GAElC,gBACOO,EAAYJ,EAAUE,EAASF,KAAiB,GAAIK,GACtDL,KAAiB,KAAOI,IAC3BJ,KAAmB,CAACI,EAAWJ,KAAiB,IAChDA,MAAqBM,SAAS,OAKjCN,MAAuBR,GAGjBQ,KA7BAO,CAAWJ,EAAgBN,GAoC5B,SAAStB,EAAUiC,EAAUC,OAE7BC,EAAQtB,EAAaa,IAAgB,IACtCV,eAAwBoB,EAAYD,MAAaD,KACrDC,KAAeF,EACfE,MAAcD,EAEdjB,UAAyCI,KAAKc,IA2HhD,SAASE,IACRC,EAAkBC,SAAQ,eACrBC,UAEFA,UAAkCD,QAAQE,GAC1CD,UAAkCD,QAAQG,GAC1CF,UAAoC,GACnC,MAAOG,GACRH,UAAoC,GACpCxB,cAAoB2B,EAAGH,WAI1BF,EAAoB,GA8CrB,SAASG,EAAcG,OAGhBC,EAAO5B,EACe,mBAAjB2B,OAA6BA,QACxC3B,EAAmB4B,EAOpB,SAASH,EAAaE,OAGfC,EAAO5B,EACb2B,MAAgBA,OAChB3B,EAAmB4B,EAOpB,SAAST,EAAYU,EAASC,UAE3BD,GACDA,EAAQ1B,SAAW2B,EAAQ3B,QAC3B2B,EAAQC,MAAK,SAACC,EAAKnC,UAAUmC,IAAQH,EAAQhC,MAI/C,SAASc,EAAeqB,EAAKC,SACT,mBAALA,EAAkBA,EAAED,GAAOC,E,wEAtXtCxB,EAGAT,EAeAkC,E,YAZAjC,EAAc,EAGdoB,EAAoB,GAEpBc,EAAgBpC,cAChBqC,EAAkBrC,cAClBsC,EAAetC,UAAQuC,OACvBC,EAAYxC,cACZyC,EAAmBzC,UAAQ0C,QAK/B1C,cAAgB,YACfC,EAAmB,KACfmC,GAAeA,EAAcO,IAGlC3C,cAAkB,YACbqC,GAAiBA,EAAgBM,GAGrCjC,EAAe,MAETP,GAHNF,EAAmB0C,WAIfxC,IACHA,MAAsBoB,QAAQE,GAC9BtB,MAAsBoB,QAAQG,GAC9BvB,MAAwB,KAI1BH,UAAQuC,OAAS,YACZD,GAAcA,EAAaK,OAEzBC,EAAID,MACNC,GAAKA,OAAaA,UAA0BxC,SAiSzB,IAhSXkB,EAAkBjB,KAAKuC,IAgSPT,IAAYnC,UAAQ6C,yBAC/CV,EAAUnC,UAAQ6C,wBAvBpB,SAAwB5B,OAQnB6B,EAPEC,EAAO,WACZC,aAAaC,GACTC,GAASC,qBAAqBL,GAClCM,WAAWnC,IAENgC,EAAUG,WAAWL,EA3SR,KA8SfG,IACHJ,EAAMD,sBAAsBE,MAcA1B,IAhS7BpB,EAAmB,MAGpBD,cAAkB,SAAC2C,EAAOU,GACzBA,EAAYrB,MAAK,gBAEfR,MAA2BD,QAAQE,GACnCD,MAA6BA,MAA2B8B,QAAO,mBAC9DC,MAAY7B,EAAa6B,MAEzB,MAAO5B,GACR0B,EAAYrB,MAAK,YACZY,QAAoBA,MAAqB,OAE9CS,EAAc,GACdrD,cAAoB2B,EAAGH,WAIrBgB,GAAWA,EAAUG,EAAOU,IAGjCrD,UAAQ0C,QAAU,YACbD,GAAkBA,EAAiBE,OAEjCC,EAAID,SACNC,GAAKA,UAEPA,SAAgBrB,QAAQE,GACvB,MAAOE,GACR3B,cAAoB2B,EAAGiB,SA8N1B,IAAIM,EAA0C,mBAAzBL","file":"route-agent.chunk.31196.js","sourcesContent":["import { h } from 'preact'\nimport { useEffect, useState } from 'preact/hooks'\n\n// Note: `uuid` comes from the URL, courtesy of our router\nconst Agent = ({ uuid }) => {\n  const [data, setData] = useState({})\n  const [role, setRole] = useState({})\n  const [ability, setAbility] = useState([])\n  const [abilityDesx, setAbilityDesx] = useState('')\n\n  const getData = async () => {\n    const res = await fetch(`https://valorant-api.com/v1/agents/${uuid}`)\n    const respdata = await res.json()\n    setData(respdata.data)\n    setRole(respdata.data.role)\n    setAbility(respdata.data.abilities)\n    setAbilityDesx(respdata.data.description)\n  }\n\n  useEffect(() => {\n    getData()\n  }, [])\n\n  const infoClick = () => {\n    setAbilityDesx(data.description)\n  }\n  const slotClick = (idx) => {\n    setAbilityDesx(ability[idx].description)\n  }\n\n  const { displayName, bustPortrait } = data\n\n  return (\n    <main className=\"agent\">\n      <div\n        className=\"imgBox\"\n        style={{ backgroundImage: `url(${bustPortrait})` }}\n      ></div>\n      <div className=\"contentBox\">\n        <div className=\"contentBox-container\">\n          <span className=\"small-role\">{role.displayName}</span>\n          <h1 className=\"name\">{displayName}</h1>\n          <div className=\"abilities\">\n            <div className=\"abl abl--1\" onClick={() => infoClick()}>\n              <div className=\"abl-assign\">INFO</div>\n              <div\n                className=\"abl-img\"\n                style={{ backgroundImage: `url(${role.displayIcon})` }}\n              ></div>\n            </div>\n            {ability.map((ablt, idx) => {\n              const { slot, displayName, displayIcon, discription } = ablt\n              return (\n                <div\n                  className={`abl abl-${idx}`}\n                  onClick={() => slotClick(idx)}\n                >\n                  <div className=\"abl-assign\">{slot}</div>\n                  <div\n                    className=\"abl-img\"\n                    style={{ backgroundImage: `url(${displayIcon})` }}\n                  ></div>\n                </div>\n              )\n            })}\n          </div>\n          {/* Abilities End*/}\n          <p className=\"desx\">{abilityDesx}</p>\n          <p className=\"role-desx\">\n            <span className=\"bold\">{role.displayName}</span>\n            {role.description}\n          </p>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default Agent\n","import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\thooks._pendingEffects = [];\n\t}\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks && c.__hooks._pendingEffects.length) {\n\t\tafterPaint(afterPaintEffects.push(c));\n\t}\n\tcurrentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\ttry {\n\t\t\tc.__hooks._list.forEach(invokeCleanup);\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({});\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._args = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') ref(createHandle());\n\t\t\telse if (ref) ref.current = createHandle();\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._value = factory();\n\t\tstate._args = args;\n\t\tstate._factory = factory;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tafterPaintEffects.forEach(component => {\n\t\tif (component._parentDom) {\n\t\t\ttry {\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t} catch (e) {\n\t\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\t\toptions._catchError(e, component._vnode);\n\t\t\t}\n\t\t}\n\t});\n\tafterPaintEffects = [];\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tif (typeof hook._cleanup == 'function') hook._cleanup();\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],"sourceRoot":""}